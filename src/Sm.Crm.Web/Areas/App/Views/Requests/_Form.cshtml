@model CreateOrEditRequestDto

<form asp-action="@(Model.Id != null && Model.Id > 0 ? "Edit" : "Add")" role="form" method="post">
    @await Html.PartialAsync("_ModalHeader", new ModalHeader { Heading = (Model.Id != null && Model.Id > 0 ? "Edit" : "Add") + " Request" })
    <div class="modal-body form-horizontal">
        @if (!Html.ViewData.ModelState.IsValid)
        {
            var error = "An error occured";
            <partial name="_Alert" model="error" />
            <div asp-validation-summary="ModelOnly" class="alert alert-danger"></div>
        }
        <input type="hidden" asp-for="Id" />
        <div class="row mb-3">
            <label asp-for="Description" class="col-lg-3 col-form-label"></label>
            <div class="col-lg-9">
                <input asp-for="Description" class="form-control" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
        </div>
        <div class="row mb-3">
            <label asp-for="RequestStatusId" class="col-lg-3 col-form-label"></label>
            <div class="col-lg-9">
                <input type="date" rows="5" asp-for="RequestStatusId" class="form-control" />
                <span asp-validation-for="RequestStatusId" class="text-danger"></span>
            </div>
        </div>
    </div>
    @await Html.PartialAsync("_ModalFooter", new ModalFooter { SubmitButtonText = Model.Id != null && Model.Id > 0 ? "Update" : "Save" })
</form>

@{
    await Html.RenderPartialAsync("_ValidationScriptsPartial");
}